/*
 * This file is generated by jOOQ.
 */
package net.dualsoft.blockbuster.db.jooq.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import net.dualsoft.blockbuster.db.jooq.tables.Actor;
import net.dualsoft.blockbuster.db.jooq.tables.records.ActorRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActorDao extends DAOImpl<ActorRecord, net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor, Integer> {

    /**
     * Create a new ActorDao without any configuration
     */
    public ActorDao() {
        super(Actor.ACTOR, net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor.class);
    }

    /**
     * Create a new ActorDao with an attached configuration
     */
    public ActorDao(Configuration configuration) {
        super(Actor.ACTOR, net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor object) {
        return object.getActorId();
    }

    /**
     * Fetch records that have <code>actor_id IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor> fetchByActorId(Integer... values) {
        return fetch(Actor.ACTOR.ACTOR_ID, values);
    }

    /**
     * Fetch a unique record that has <code>actor_id = value</code>
     */
    public net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor fetchOneByActorId(Integer value) {
        return fetchOne(Actor.ACTOR.ACTOR_ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor> fetchByName(String... values) {
        return fetch(Actor.ACTOR.NAME, values);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor> fetchByLastUpdate(Timestamp... values) {
        return fetch(Actor.ACTOR.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>picture_url IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor> fetchByPictureUrl(String... values) {
        return fetch(Actor.ACTOR.PICTURE_URL, values);
    }

    /**
     * Fetch records that have <code>biography IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor> fetchByBiography(String... values) {
        return fetch(Actor.ACTOR.BIOGRAPHY, values);
    }

    /**
     * Fetch records that have <code>moviedb_id IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Actor> fetchByMoviedbId(Integer... values) {
        return fetch(Actor.ACTOR.MOVIEDB_ID, values);
    }
}
