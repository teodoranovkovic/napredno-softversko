/*
 * This file is generated by jOOQ.
 */
package net.dualsoft.blockbuster.db.jooq.tables.daos;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import net.dualsoft.blockbuster.db.jooq.tables.Address;
import net.dualsoft.blockbuster.db.jooq.tables.records.AddressRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressDao extends DAOImpl<AddressRecord, net.dualsoft.blockbuster.db.jooq.tables.pojos.Address, Integer> {

    /**
     * Create a new AddressDao without any configuration
     */
    public AddressDao() {
        super(Address.ADDRESS, net.dualsoft.blockbuster.db.jooq.tables.pojos.Address.class);
    }

    /**
     * Create a new AddressDao with an attached configuration
     */
    public AddressDao(Configuration configuration) {
        super(Address.ADDRESS, net.dualsoft.blockbuster.db.jooq.tables.pojos.Address.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(net.dualsoft.blockbuster.db.jooq.tables.pojos.Address object) {
        return object.getAddressId();
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByAddressId(Integer... values) {
        return fetch(Address.ADDRESS.ADDRESS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>address_id = value</code>
     */
    public net.dualsoft.blockbuster.db.jooq.tables.pojos.Address fetchOneByAddressId(Integer value) {
        return fetchOne(Address.ADDRESS.ADDRESS_ID, value);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByAddress(String... values) {
        return fetch(Address.ADDRESS.ADDRESS_, values);
    }

    /**
     * Fetch records that have <code>district IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByDistrict(String... values) {
        return fetch(Address.ADDRESS.DISTRICT, values);
    }

    /**
     * Fetch records that have <code>city_id IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByCityId(Short... values) {
        return fetch(Address.ADDRESS.CITY_ID, values);
    }

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByPostalCode(String... values) {
        return fetch(Address.ADDRESS.POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByLastUpdate(Timestamp... values) {
        return fetch(Address.ADDRESS.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByLongitude(BigDecimal... values) {
        return fetch(Address.ADDRESS.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<net.dualsoft.blockbuster.db.jooq.tables.pojos.Address> fetchByLatitude(BigDecimal... values) {
        return fetch(Address.ADDRESS.LATITUDE, values);
    }
}
