/*
 * This file is generated by jOOQ.
 */
package net.dualsoft.blockbuster.db.jooq.tables.pojos;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import net.dualsoft.blockbuster.db.jooq.tables.interfaces.IPayment;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payment implements IPayment {

    private static final long serialVersionUID = -1781137434;

    private Integer    paymentId;
    private Short      customerId;
    private Short      staffId;
    private Integer    rentalId;
    private BigDecimal amount;
    private Timestamp  paymentDate;
    private String     type;

    public Payment() {}

    public Payment(IPayment value) {
        this.paymentId = value.getPaymentId();
        this.customerId = value.getCustomerId();
        this.staffId = value.getStaffId();
        this.rentalId = value.getRentalId();
        this.amount = value.getAmount();
        this.paymentDate = value.getPaymentDate();
        this.type = value.getType();
    }

    public Payment(
        Integer    paymentId,
        Short      customerId,
        Short      staffId,
        Integer    rentalId,
        BigDecimal amount,
        Timestamp  paymentDate,
        String     type
    ) {
        this.paymentId = paymentId;
        this.customerId = customerId;
        this.staffId = staffId;
        this.rentalId = rentalId;
        this.amount = amount;
        this.paymentDate = paymentDate;
        this.type = type;
    }

    @Override
    public Integer getPaymentId() {
        return this.paymentId;
    }

    @Override
    public void setPaymentId(Integer paymentId) {
        this.paymentId = paymentId;
    }

    @Override
    public Short getCustomerId() {
        return this.customerId;
    }

    @Override
    public void setCustomerId(Short customerId) {
        this.customerId = customerId;
    }

    @Override
    public Short getStaffId() {
        return this.staffId;
    }

    @Override
    public void setStaffId(Short staffId) {
        this.staffId = staffId;
    }

    @Override
    public Integer getRentalId() {
        return this.rentalId;
    }

    @Override
    public void setRentalId(Integer rentalId) {
        this.rentalId = rentalId;
    }

    @Override
    public BigDecimal getAmount() {
        return this.amount;
    }

    @Override
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    @Override
    public Timestamp getPaymentDate() {
        return this.paymentDate;
    }

    @Override
    public void setPaymentDate(Timestamp paymentDate) {
        this.paymentDate = paymentDate;
    }

    @Override
    public String getType() {
        return this.type;
    }

    @Override
    public void setType(String type) {
        this.type = type;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Payment (");

        sb.append(paymentId);
        sb.append(", ").append(customerId);
        sb.append(", ").append(staffId);
        sb.append(", ").append(rentalId);
        sb.append(", ").append(amount);
        sb.append(", ").append(paymentDate);
        sb.append(", ").append(type);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IPayment from) {
        setPaymentId(from.getPaymentId());
        setCustomerId(from.getCustomerId());
        setStaffId(from.getStaffId());
        setRentalId(from.getRentalId());
        setAmount(from.getAmount());
        setPaymentDate(from.getPaymentDate());
        setType(from.getType());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IPayment> E into(E into) {
        into.from(this);
        return into;
    }
}
